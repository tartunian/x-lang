
C:\Users\tartunian\Documents\repos\assignment-2-lexer-spring-2020-tartunian>IF [sample_files\invalid.x] == [] (java -cp C:\Users\tartunian\Documents\repos\assignment-2-lexer-spring-2020-tartunian\out\production\assignment-2-lexer-spring-2020-tartunian lexer.Lexer sample_files\simple.x )  ELSE (java -cp C:\Users\tartunian\Documents\repos\assignment-2-lexer-spring-2020-tartunian\out\production\assignment-2-lexer-spring-2020-tartunian lexer.Lexer sample_files\invalid.x ) 
Source file: sample_files\invalid.x
user.dir: C:\Users\tartunian\Documents\repos\assignment-2-lexer-spring-2020-tartunian
READLINE:   program { int i int j
program     left: 0        right: 6        line: 1        Program 
{           left: 8        right: 8        line: 1        LeftBrace
int         left: 10       right: 12       line: 1        Int     
i           left: 14       right: 14       line: 1        Identifier
int         left: 16       right: 18       line: 1        Int     
j           left: 20       right: 20       line: 1        Identifier
READLINE:     i = i + j + 7
i           left: 2        right: 2        line: 2        Identifier
=           left: 4        right: 4        line: 2        Assign  
i           left: 6        right: 6        line: 2        Identifier
+           left: 8        right: 8        line: 2        Plus    
j           left: 10       right: 10       line: 2        Identifier
+           left: 12       right: 12       line: 2        Plus    
7           left: 14       right: 14       line: 2        INTeger 
READLINE:     j = write(i)
j           left: 2        right: 2        line: 3        Identifier
=           left: 4        right: 4        line: 3        Assign  
write       left: 6        right: 10       line: 3        Identifier
(           left: 11       right: 11       line: 3        LeftParen
i           left: 12       right: 12       line: 3        Identifier
)           left: 13       right: 13       line: 3        RightParen
READLINE:     char c = 'v
char        left: 2        right: 5        line: 4        Char    
c           left: 7        right: 7        line: 4        Identifier
=           left: 9        right: 9        line: 4        Assign  
******** illegal characters: 'v
'v'         left: 11       right: 12       line: 4        CharLit 
READLINE:     string s = "string
string      left: 2        right: 7        line: 5        StringType
s           left: 9        right: 9        line: 5        Identifier
=           left: 11       right: 11       line: 5        Assign  
******** illegal characters: "string
READLINE:     i = 4
******** illegal characters: "string   i = 4
READLINE:   }
******** illegal characters: "string   i = 4 }

  1: program { int i int j
  2:   i = i + j + 7
  3:   j = write(i)
  4:   char c = 'v
  5:   string s = "string
  6:   i = 4
  7: }
